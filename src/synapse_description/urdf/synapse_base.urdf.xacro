<?xml version="1.0"?>
<!--
  Project Synapse - Base Mobile Robot URDF (xacro)
  Minimal model defining:
    - base_link (box)
    - laser frame (cylindrical puck at the front-top)
    - camera frames:
        * camera_link (physical mounting frame)
        * camera_color_optical_frame (REP-103/REP-120 optical frame)
        * camera_depth_optical_frame  (REP-103/REP-120 optical frame)
    - four wheels (diff/4WD layout) with realistic inertias
    - IMU link mounted inside the chassis

  Conventions:
    - Robot body frames follow ROS REP-103:
        x-forward, y-left, z-up.
    - Optical frames follow REP-103/120 (x-right, y-down, z-forward) via rotation
      RPY = (-pi/2, 0, -pi/2) from camera_link.

  Notes:
    - Inertias are approximate and suitable for visualization and basic kinematics.
    - Extend this model (detailed wheel geometry, sensors) as hardware is finalized.
-->
<robot name="synapse_base" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- ======================== Properties ======================== -->
  <xacro:property name="pi" value="3.141592653589793"/>

  <!-- Base geometry (meters) and mass (kg) -->
  <xacro:property name="base_length" value="0.20"/>  <!-- x -->
  <xacro:property name="base_width"  value="0.16"/>  <!-- y -->
  <xacro:property name="base_height" value="0.08"/>  <!-- z -->
  <xacro:property name="base_mass"   value="2.0"/>

  <!-- Laser geometry -->
  <xacro:property name="laser_radius" value="0.035"/>
  <xacro:property name="laser_height" value="0.030"/>
  <xacro:property name="laser_mass"   value="0.20"/>

  <!-- Camera enclosure geometry -->
  <xacro:property name="cam_box_x" value="0.065"/>
  <xacro:property name="cam_box_y" value="0.025"/>
  <xacro:property name="cam_box_z" value="0.025"/>
  <xacro:property name="cam_mass"   value="0.12"/>

  <!-- Wheel geometry (cylindrical), axle along +Y, rotation axis (0 1 0) -->
  <xacro:property name="wheel_radius" value="0.033"/>
  <xacro:property name="wheel_thickness" value="0.020"/>
  <xacro:property name="wheel_mass" value="0.15"/>

  <!-- Wheel positions relative to base_link (meters) -->
  <!-- Front wheels slightly forward, rear wheels slightly backward -->
  <xacro:property name="wheel_x_forward" value="${ base_length/2.0 - 0.05 }"/>
  <xacro:property name="wheel_x_backward" value="${ -base_length/2.0 + 0.05 }"/>
  <!-- Lateral offset: near the outer edges, leave margin from chassis -->
  <xacro:property name="wheel_y_offset" value="${ base_width/2.0 - 0.02 }"/>
  <!-- Wheel ground contact (assuming ground z=0 at wheel bottom); mount at base bottom plus radius -->
  <xacro:property name="wheel_z" value="${ -base_height/2.0 + wheel_radius }"/>

  <!-- IMU geometry -->
  <xacro:property name="imu_box" value="0.02"/>
  <xacro:property name="imu_mass" value="0.05"/>

  <!-- Mount offsets relative to base_link (meters) -->
  <!-- Place laser at the front-top of the chassis -->
  <xacro:property name="laser_offset_x" value="${base_length/2.0 - 0.03}"/>
  <xacro:property name="laser_offset_y" value="0.0"/>
  <xacro:property name="laser_offset_z" value="${base_height/2.0 + laser_height/2.0 + 0.02}"/>

  <!-- Place camera just above/beside the laser, slightly back for clearance -->
  <xacro:property name="cam_offset_x" value="${laser_offset_x - 0.01}"/>
  <xacro:property name="cam_offset_y" value="0.0"/>
  <xacro:property name="cam_offset_z" value="${laser_offset_z + 0.015}"/>

  <!-- IMU position (inside chassis, near COM) -->
  <xacro:property name="imu_offset_x" value="0.0"/>
  <xacro:property name="imu_offset_y" value="0.0"/>
  <xacro:property name="imu_offset_z" value="0.0"/>

  <!-- ======================== Materials ========================= -->
  <material name="mat_dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="mat_light_grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="mat_blue">
    <color rgba="0.1 0.4 0.8 1.0"/>
  </material>
  <material name="mat_black">
    <color rgba="0.05 0.05 0.05 1.0"/>
  </material>

  <!-- ======================== Base Link ========================= -->
  <link name="base_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${base_mass}"/>
      <!-- Box inertia for dimensions (L=x, W=y, H=z) around center:
           Ixx = 1/12 m (W^2 + H^2), Iyy = 1/12 m (L^2 + H^2), Izz = 1/12 m (L^2 + W^2) -->
      <inertia
        ixx="${(1.0/12.0)*base_mass*(base_width*base_width + base_height*base_height)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*base_mass*(base_length*base_length + base_height*base_height)}"
        iyz="0.0"
        izz="${(1.0/12.0)*base_mass*(base_length*base_length + base_width*base_width)}"/>
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="mat_dark_grey"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
  </link>

  <!-- ======================== Laser ============================= -->
  <link name="laser">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${laser_mass}"/>
      <!-- Approximate inertia for a thin cylinder -->
      <inertia
        ixx="${(1.0/12.0)*laser_mass*(3*laser_radius*laser_radius + laser_height*laser_height)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*laser_mass*(3*laser_radius*laser_radius + laser_height*laser_height)}"
        iyz="0.0"
        izz="${0.5*laser_mass*laser_radius*laser_radius}"/>
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${laser_radius}" length="${laser_height}"/>
      </geometry>
      <material name="mat_light_grey"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${laser_radius}" length="${laser_height}"/>
      </geometry>
    </collision>
  </link>

  <joint name="laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser"/>
    <origin xyz="${laser_offset_x} ${laser_offset_y} ${laser_offset_z}" rpy="0 0 0"/>
  </joint>

  <!-- ======================== Camera ============================ -->
  <link name="camera_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${cam_mass}"/>
      <inertia
        ixx="${(1.0/12.0)*cam_mass*(cam_box_y*cam_box_y + cam_box_z*cam_box_z)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*cam_mass*(cam_box_x*cam_box_x + cam_box_z*cam_box_z)}"
        iyz="0.0"
        izz="${(1.0/12.0)*cam_mass*(cam_box_x*cam_box_x + cam_box_y*cam_box_y)}"/>
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${cam_box_x} ${cam_box_y} ${cam_box_z}"/>
      </geometry>
      <material name="mat_blue"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${cam_box_x} ${cam_box_y} ${cam_box_z}"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_mount" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="${cam_offset_x} ${cam_offset_y} ${cam_offset_z}" rpy="0 0 0"/>
  </joint>

  <!-- Camera optical frames (REP-103/120):
       camera_*_optical_frame is rotated so that:
         +X to the right, +Y down, +Z forward.
       From a camera_link with x-forward, y-left, z-up:
         RPY = (-pi/2, 0, -pi/2)
  -->
  <link name="camera_color_optical_frame"/>
  <joint name="camera_color_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_color_optical_frame"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>

  <link name="camera_depth_optical_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_depth_optical_frame"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>

  <!-- ======================== Wheels ============================ -->
  <!-- Cylinder axis is along +Z by default. Rotate by +90deg about +X so cylinder axis aligns with +Y (wheel axle). -->
  <!-- Front Left -->
  <link name="wheel_front_left">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${wheel_mass}"/>
      <!-- Solid cylinder inertia about its own center, axis along Z (before rotation):
           Ixx = Iyy = 1/12 m (3r^2 + L^2), Izz = 1/2 m r^2 -->
      <inertia
        ixx="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        iyz="0.0"
        izz="${0.5*wheel_mass*wheel_radius*wheel_radius}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
      <material name="mat_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_front_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_front_left"/>
    <origin xyz="${wheel_x_forward} ${wheel_y_offset} ${wheel_z}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="50.0"/>
  </joint>

  <!-- Front Right -->
  <link name="wheel_front_right">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        iyz="0.0"
        izz="${0.5*wheel_mass*wheel_radius*wheel_radius}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
      <material name="mat_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_front_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_front_right"/>
    <origin xyz="${wheel_x_forward} ${-wheel_y_offset} ${wheel_z}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="50.0"/>
  </joint>

  <!-- Rear Left -->
  <link name="wheel_rear_left">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        iyz="0.0"
        izz="${0.5*wheel_mass*wheel_radius*wheel_radius}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
      <material name="mat_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_rear_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_rear_left"/>
    <origin xyz="${wheel_x_backward} ${wheel_y_offset} ${wheel_z}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="50.0"/>
  </joint>

  <!-- Rear Right -->
  <link name="wheel_rear_right">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*wheel_mass*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}"
        iyz="0.0"
        izz="${0.5*wheel_mass*wheel_radius*wheel_radius}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
      <material name="mat_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_rear_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_rear_right"/>
    <origin xyz="${wheel_x_backward} ${-wheel_y_offset} ${wheel_z}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="50.0"/>
  </joint>

  <!-- ======================== IMU =============================== -->
  <link name="imu_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${imu_mass}"/>
      <!-- Box inertia: Ixx = 1/12 m (y^2+z^2), Iyy = 1/12 m (x^2+z^2), Izz = 1/12 m (x^2+y^2) -->
      <inertia
        ixx="${(1.0/12.0)*imu_mass*(imu_box*imu_box + imu_box*imu_box)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1.0/12.0)*imu_mass*(imu_box*imu_box + imu_box*imu_box)}"
        iyz="0.0"
        izz="${(1.0/12.0)*imu_mass*(imu_box*imu_box + imu_box*imu_box)}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${imu_box} ${imu_box} ${imu_box}"/>
      </geometry>
      <material name="mat_light_grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${imu_box} ${imu_box} ${imu_box}"/>
      </geometry>
    </collision>
  </link>
  <joint name="imu_mount" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
  </joint>

  <!-- ======================== End of Model ====================== -->

</robot>
