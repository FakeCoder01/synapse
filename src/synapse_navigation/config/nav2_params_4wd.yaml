# Nav2 tuned parameters for a compact 4WD differential-drive base
# - Footprint ~ 0.20m x 0.18m (padded)
# - Max linear velocity ~ 0.35â€“0.45 m/s
# - Max angular velocity ~ 1.2 rad/s
# - LaserScan on /scan
# - Frames: map -> odom -> base_link
#
# Use with:
#   ros2 launch nav2_bringup navigation_launch.py params_file:=/path/to/nav2_params_4wd.yaml map:=/path/to/map.yaml
#
# Or via your wrapper launch (e.g., synapse_navigation/nav2_bringup.launch.py).

amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    global_frame_id: "map"
    scan_topic: "/scan"
    min_particles: 500
    max_particles: 2000
    update_min_a: 0.12
    update_min_d: 0.10
    resample_interval: 1
    transform_tolerance: 0.3
    laser_model_type: "likelihood_field"
    z_hit: 0.5
    z_short: 0.05
    z_max: 0.05
    z_rand: 0.5
    sigma_hit: 0.2
    lambda_short: 0.1
    recovery_alpha_slow: 0.001
    recovery_alpha_fast: 0.1

map_server:
  ros__parameters:
    use_sim_time: false
    # yaml_filename is typically provided by CLI arg 'map:=<path>.yaml'
    # yaml_filename: ""

planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 5.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      tolerance: 0.125               # path end tolerance
      downsample_costmap: false
      downsampling_factor: 1
      allow_unknown: true            # allow planning through unknown space for exploration-like behavior
      max_iterations: 100000
      max_on_approach_iterations: 1000
      motion_model_for_search: "MOORE"  # 8-connected
      cost_travel_multiplier: 2.0
      smoothing: true
      smooth_path: true

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    odom_topic: "odom"
    enable_stamped_cmd_vel: false

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.1
      movement_time_allowance: 5.0

    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.12
      yaw_goal_tolerance: 0.15
      stateful: true

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller/RegulatedPurePursuitController"
      desired_linear_vel: 0.35
      min_linear_velocity: 0.05
      max_linear_accel: 0.8
      max_linear_decel: 0.8
      max_angular_accel: 1.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.25
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.2
      transform_tolerance: 0.2
      use_velocity_scaled_lookahead_dist: true
      allow_reversing: true
      use_rotate_to_heading: true
      regulate_turns: true
      # Velocity regulation near obstacles
      use_cost_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 0.5
      regulated_linear_scaling_min_speed: 0.05
      cost_scaling_dist: 0.6
      cost_scaling_gain: 2.0
      low_pass_filter_alpha: 0.4

smoother_server:
  ros__parameters:
    use_sim_time: false
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother/SimpleSmoother"
      tolerance: 0.05
      max_its: 1000
      w_data: 0.2
      w_smooth: 0.3

behavior_server:
  ros__parameters:
    use_sim_time: false
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    wait:
      plugin: "nav2_behaviors/Wait"

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: "map"
    robot_base_frame: "base_link"
    odom_topic: "odom"
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    transform_tolerance: 0.2
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_are_error_codes_active_condition_bt_node

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    plugin: "nav2_waypoint_follower/WaypointFollower"
    stop_on_failure: true

# Optional smoother on velocity commands (can be used with external velocity multipliers)
velocity_smoother:
  ros__parameters:
    use_sim_time: false
    smoothing_frequency: 20.0
    scale_velocities: true
    feedback: "OPEN_LOOP"
    max_velocity: 0.45
    min_velocity: 0.0
    max_accel: 0.8
    max_decel: 0.8

local_costmap:
  ros__parameters:
    use_sim_time: false
    global_frame: "odom"
    robot_base_frame: "base_link"
    rolling_window: true
    width: 3.0
    height: 3.0
    resolution: 0.05
    publish_frequency: 10.0
    update_frequency: 10.0
    transform_tolerance: 0.2
    robot_radius: 0.0
    footprint: "[[0.10, 0.09], [0.10, -0.09], [-0.10, -0.09], [-0.10, 0.09]]"
    footprint_padding: 0.01
    always_send_full_costmap: true
    plugins: ["obstacle_layer", "inflation_layer"]

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: "/scan"
        data_type: "LaserScan"
        min_obstacle_height: 0.00
        max_obstacle_height: 0.35
        obstacle_range: 2.5
        raytrace_range: 3.0
        clearing: true
        marking: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.6

global_costmap:
  ros__parameters:
    use_sim_time: false
    global_frame: "map"
    robot_base_frame: "base_link"
    rolling_window: false
    resolution: 0.05
    publish_frequency: 1.5
    update_frequency: 1.5
    transform_tolerance: 0.3
    robot_radius: 0.0
    footprint: "[[0.10, 0.09], [0.10, -0.09], [-0.10, -0.09], [-0.10, 0.09]]"
    footprint_padding: 0.01
    always_send_full_costmap: true
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_subscribe_transient_local: true
      subscribe_to_updates: true

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: "/scan"
        data_type: "LaserScan"
        min_obstacle_height: 0.00
        max_obstacle_height: 0.35
        obstacle_range: 3.5
        raytrace_range: 6.0
        clearing: true
        marking: false  # global usually uses static + occasional lidar, keep marking off unless needed

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.7

lifecycle_manager:
  ros__parameters:
    use_sim_time: false
    autostart: true
    # Adjust node list depending on SLAM vs localization-only flows.
    node_names:
      - map_server
      - amcl
      - planner_server
      - controller_server
      - smoother_server
      - behavior_server
      - bt_navigator
      - waypoint_follower
      - velocity_smoother
